[project]
name = "markmodule"
version = "0.4.0"
description = "Import python code in markdown as module"
authors = [
    {name = "Matthew Martin", email = "matthewdeanmartin@gmail.com"},
]
license = {text = "MIT"}
readme = "README.md"
requires-python = ">=3.7,<4.0"
keywords = ["markdown",]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python :: 3.14",
]
dependencies = [
    "mistune<3.0.0",
    "mypy",
]

[project.urls]
"Bug Tracker" = "https://github.com/matthewdeanmartin/markmodule/issues"
"Change Log" = "https://github.com/matthewdeanmartin/markmodule/blob/main/CHANGES.md"


[dependency-groups]
dev = ["mdformat", "pytest", "vermin", "hypothesis[cli]", "pre-commit", "mypy"]

[tool.black]
line-length = 120
target-version = ['py39']
include = '\.pyi?$'
exclude = '''

(
  /(
      \.eggs         # exclude a few common directories in the
    | \.git          # root of the project
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
  )/
  | foo.py           # also separately exclude a file named foo.py in
                     # the root of the project
)
'''

[tool.pytest.ini_options]
minversion = "6.0"
testpaths = [
    "tests",
]
junit_family = "xunit1"
norecursedirs = ["vendor", "scripts"]
# don't know how to do this in toml
#addopts = "--strict-markers"
#markers =
#	slow: marks tests as slow (deselect with '-m "not slow"')
#	fast: marks tests as fast (deselect with '-m "not fast"')


[tool.isort]
default_section = "THIRDPARTY"
force_grid_wrap = 0
include_trailing_comma = true
known_first_party = ["markmodule"]
line_length = 88
multi_line_output = 3
use_parentheses = true

[tool.ruff]
line-length = 1000

# Enable Pyflakes `E` and `F` codes by default.
select = ["E", "F"]
ignore = [
    "E722",
    "E501",
]

# Exclude a variety of commonly ignored directories.
exclude = [
    "dead_code",
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
    "hide"
]
per-file-ignores = { }

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

# Assume Python 3.10.
target-version = "py311"

[tool.scriv]
format = "md"
version = "literal: pyproject.toml: project.version"

#[tool.hatch.version]
#path = "markmodule/__init__.py"
#output_file = "CHANGELOG.${config:format}"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.sdist]
include = [
    "markmodule/**/*.py",
    "markmodule/py.typed",
    "/README.md", "LICENSE",
]

exclude = [
]

[tool.hatch.build.targets.wheel]
packages = ["markmodule"]
include = [
    "markmodule/**/*.py",
    "markmodule/py.typed",
    "/README.md", "LICENSE",
]

# Force-include the .pth file at the wheel root (i.e., site-packages)
[tool.hatch.build.targets.wheel.force-include]
"markmodule/aaaaa_exec_markdown.pth" = "aaaaa_exec_markdown.pth"

[mypy]
warn_return_any = true
warn_unused_configs = true
strict = true

[[tool.mypy.overrides]]
module = ["mistune.*"]
ignore_missing_imports = true
